openapi: 3.0.3
info:
  title: Swagger Exercisestore - OpenAPI 3.0
  description: |-
    This is a sample Exercise Store Server based on the REST.  
    Here we will have RESTFUL API for crud operations
  termsOfService: http://swagger.io/terms/
  contact:
    email: shay.te@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://exercisestore3.swagger.io/api/v3
tags:
  - name: exercise
    description: Everything about your Exercises
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /api/exercise:
    put:
      tags:
        - exercise
      summary: Update an existing exercise
      description: Update an existing exercise by Id
      operationId: updateExercise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
        '400':
          description: Invalid ID supplied
        '404':
          description: Exercise not found
        '422':
          description: Validation exception
    post:
      tags:
        - exercise
      summary: Add a new exercise to the store
      description: Add a new exercise to the store
      operationId: addExercise
      requestBody:
        description: Create a new exercise in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /api/exercise/all:
    get:
      tags:
        - exercise
      summary: Get all Exercises by user
      description: Return a JSON with list of exercises.
      operationId: track_core_lib.exercise.all
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exercise'
        '500':
          description: Server error
  /api/exercise/{exerciseId}:
    get:
      tags:
        - exercise
      summary: Find exercise by ID
      description: Returns a single exercise
      operationId: track_core_lib.exercise.get
      parameters:
        - name: exerciseId
          in: path
          description: ID of exercise to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
            application/xml:
              schema:
                $ref: '#/components/schemas/Exercise'
        '400':
          description: Invalid ID supplied
        '404':
          description: Exercise not found
    post:
      tags:
        - exercise
      summary: Updates a exercise in the store with form data
      description: ''
      operationId: updateExerciseWithForm
      parameters:
        - name: exerciseId
          in: path
          description: ID of exercise that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of exercise that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of exercise that needs to be updated
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
components:
  schemas:
    Exercise:
      required:
        - user_id
        - type
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 10
        type:
          type: integer
          format: int64
          example: 1
        duration_minutes:
          type: integer
          format: int64
          example: 10
        start_datetime:
          type: string
          format: date-time
          example: '2023-09-04T12:00:00Z'
      xml:
        name: exercise
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Exercise:
      description: Exercise object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exercise'
        application/xml:
          schema:
            $ref: '#/components/schemas/Exercise'
  securitySchemes:
    exercisestore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://exercisestore3.swagger.io/oauth/authorize
          scopes:
            write:exercises: modify exercises in your account
            read:exercises: read your exercises
    api_key:
      type: apiKey
      name: api_key
      in: header